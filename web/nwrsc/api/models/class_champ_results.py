# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from nwrsc.api.models.base_model_ import Model
from nwrsc.api.models.champ_entry import ChampEntry  # noqa: F401,E501
from nwrsc.api import util


class ClassChampResults(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, classcode: str=None, entries: ChampEntry=None):  # noqa: E501
        """ClassChampResults - a model defined in Swagger

        :param classcode: The classcode of this ClassChampResults.  # noqa: E501
        :type classcode: str
        :param entries: The entries of this ClassChampResults.  # noqa: E501
        :type entries: ChampEntry
        """
        self.swagger_types = {
            'classcode': str,
            'entries': ChampEntry
        }

        self.attribute_map = {
            'classcode': 'classcode',
            'entries': 'entries'
        }

        self._classcode = classcode
        self._entries = entries

    @classmethod
    def from_dict(cls, dikt) -> 'ClassChampResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClassChampResults of this ClassChampResults.  # noqa: E501
        :rtype: ClassChampResults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def classcode(self) -> str:
        """Gets the classcode of this ClassChampResults.

        the classcode for the results  # noqa: E501

        :return: The classcode of this ClassChampResults.
        :rtype: str
        """
        return self._classcode

    @classcode.setter
    def classcode(self, classcode: str):
        """Sets the classcode of this ClassChampResults.

        the classcode for the results  # noqa: E501

        :param classcode: The classcode of this ClassChampResults.
        :type classcode: str
        """

        self._classcode = classcode

    @property
    def entries(self) -> ChampEntry:
        """Gets the entries of this ClassChampResults.


        :return: The entries of this ClassChampResults.
        :rtype: ChampEntry
        """
        return self._entries

    @entries.setter
    def entries(self, entries: ChampEntry):
        """Sets the entries of this ClassChampResults.


        :param entries: The entries of this ClassChampResults.
        :type entries: ChampEntry
        """

        self._entries = entries
